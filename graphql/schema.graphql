type UserPresence {
  connectionId: ID!
  spaceId: String
  userId: String
  timestamp: AWSTimestamp
}

input CreateUserPresence {
    connectionId: ID!
    spaceId: String
    userId: String
    timestamp: AWSTimestamp
}

type Query {
  getUsersOnlineBySpace(spaceId: String!): [UserPresence]
}

type Mutation {
  createUserPresence(userPresence: CreateUserPresence!): UserPresence
  deleteUserPresence(connectionId: ID!): ID
}

type Subscription {
    onCreateUserPresence(spaceId: String!): UserPresence
        @aws_subscribe(mutations: ["createUserPresence"])
    onDeleteUserPresence(spaceId: String!): ID
        @aws_subscribe(mutations: ["deleteUserPresence"])
}

schema {
    query: Query
    mutation: Mutation
    subscription: Subscription
}
